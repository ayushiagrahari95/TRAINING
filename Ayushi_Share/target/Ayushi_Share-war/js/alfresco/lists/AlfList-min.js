define(["dojo/_base/declare","dijit/_WidgetBase","dijit/_TemplatedMixin","dojo/text!./templates/AlfList.html","alfresco/core/Core","alfresco/core/CoreWidgetProcessing","alfresco/documentlibrary/_AlfDocumentListTopicMixin","alfresco/core/DynamicWidgetProcessingTopics","alfresco/documentlibrary/views/AlfDocumentListView","alfresco/menus/AlfCheckableMenuItem","dojo/_base/array","dojo/_base/lang","dojo/dom-construct","dojo/dom-class"],function(g,c,n,j,w,a,N,b,C,z,k,i,I,x){return g([c,n,w,a,N,b],{i18nRequirements:[{i18nFile:"./i18n/AlfList.properties"}],cssRequirements:[{cssFile:"./css/AlfList.css"}],templateString:j,viewMap:null,viewControlsMap:null,widgets:null,requestInProgress:false,blockConcurrentRequests:false,useInfiniteScroll:false,loadDataPublishTopic:"ALF_RETRIEVE_DOCUMENTS_REQUEST",loadDataPublishPayload:null,postMixInProperties:function v(){this.setupSubscriptions();this.setDisplayMessages()},setupSubscriptions:function f(){this.alfSubscribe(this.reloadDataTopic,i.hitch(this,this.loadData));this.alfSubscribe(this.viewSelectionTopic,i.hitch(this,this.onViewSelected));this.alfSubscribe(this.loadDataPublishTopic+"_SUCCESS",i.hitch(this,this.onDataLoadSuccess));this.alfSubscribe(this.loadDataPublishTopic+"_FAILURE",i.hitch(this,this.onDataLoadFailure));this.alfSubscribe(this.requestInProgressTopic,i.hitch(this,this.onRequestInProgress));this.alfSubscribe(this.requestFinishedTopic,i.hitch(this,this.onRequestFinished));if(this.useInfiniteScroll){this.alfSubscribe(this.scrollNearBottom,i.hitch(this,this.onScrollNearBottom))}},noViewSelectedMessage:"alflist.no.view.message",noDataMessage:"alflist.no.data.message",fetchingDataMessage:"alflist.loading.data.message",renderingViewMessage:"alflist.rendering.data.message",fetchingMoreDataMessage:"alflist.loading.data.message",dataFailureMessage:"alflist.data.failure.message",setDisplayMessages:function t(){this.noViewSelectedMessage=this.message(this.noViewSelectedMessage);this.noDataMessage=this.message(this.noDataMessage);this.fetchingDataMessage=this.message(this.fetchingDataMessage);this.renderingViewMessage=this.message(this.renderingViewMessage);this.fetchingMoreDataMessage=this.message(this.fetchingMoreDataMessage);this.dataFailureMessage=this.message(this.dataFailureMessage)},postCreate:function q(){if(this.widgets){this.processWidgets(this.widgets)}},waitForPageWidgets:true,_readyToLoad:false,onPageWidgetsReady:function m(O){this.alfUnsubscribe(this.pageWidgetsReadySubcription);this._readyToLoad=true;if(this.currentData!=null){this.processLoadedData(this.currentData);this.renderView()}else{this.loadData()}},viewPreferenceProperty:"org.alfresco.share.documentList.viewRendererName",allWidgetsProcessed:function y(P){this.viewMap={};k.forEach(P,i.hitch(this,"registerView"));if(this._currentlySelectedView==null){for(var O in this.viewMap){this._currentlySelectedView=O;break}}this.alfPublish(this.viewSelectionTopic,{value:this._currentlySelectedView,preference:this.viewPreferenceProperty});if(this.waitForPageWidgets===true){this.pageWidgetsReadySubcription=this.alfSubscribe("ALF_WIDGETS_READY",i.hitch(this,"onPageWidgetsReady"),true)}else{this._readyToLoad=true;this.onPageWidgetsReady()}},registerView:function H(O,P){if(O.isInstanceOf(C)){this.alfLog("log","Registering view",O);var Q=O.getViewSelectionConfig();if(Q==null||!this.isValidViewSelectionConfig(Q)){this.alfLog("error","The following view does not provide a valid selection menu item upon request",Q)}else{O.noItemsMessage=this.noDataMessage;this.processView(O,P)}}else{this.alfLog("warn","The following widget was provided as a view, but it does not inherit from 'alfresco/documentlibrary/AlfDocumentListView'",O)}},processView:function d(O,P){var S=O.getViewName();if(S==null){S=P}var R=O.getViewSelectionConfig();R.value=S;if(S==this.view){this._currentlySelectedView=S;R.checked=true}R.label=this.message(R.label);this.publishAdditionalControls(S,O);R.publishTopic=this.viewSelectionTopic;R.publishPayload={preference:this.viewPreferenceProperty};R.group=this.viewSelectionMenuItemGroup;R.pubSubScope=this.pubSubScope;var Q=new z(R);this.alfPublish(this.selectionMenuItemTopic,{menuItem:Q});this.viewMap[S]=O},additionalControlsTarget:"DOCLIB_TOOLBAR",additionalViewControlVisibilityConfig:null,publishAdditionalControls:function r(Q,O){if(this.viewControlsMap==null){this.viewControlsMap={}}var P=this.viewControlsMap[Q];if(P==null){P=O.getAdditionalControls();if(this.additionalViewControlVisibilityConfig!=null){k.forEach(P,function(S,R){S.visibilityConfig=this.additionalViewControlVisibilityConfig;this.setupVisibilityConfigProcessing(S)},this)}this.viewControlsMap[Q]=P}if(P!=null){this.alfPublish(this.dynamicallyAddWidgetTopic,{targetId:this.additionalControlsTarget,targetPosition:0,widgets:P})}},isValidViewSelectionConfig:function M(O){return(O.label!=null&&O.label!=="")},_currentlySelectedView:null,currentData:null,onViewSelected:function G(O){if(this.currentData==null){this.alfLog("warn","There is no data to render a view with");this.showNoDataMessage()}else{if(O==null||O.value==null){this.alfLog("warn","A request was made to select a view, but not enough information was provided",O)}else{if(this._currentlySelectedView==O.value){}else{if(this.viewMap[O.value]==null){this.alfLog("error","A request was made to select a non-existent view. Requested view: ",O.value," from: ",this.viewMap)}else{if(typeof this.viewMap[O.value].renderView==="function"){this._currentlySelectedView=O.value;var P=this.viewMap[O.value];this.showRenderingMessage();P.setData(this.currentData);P.currentData.previousItemCount=0;P.renderView(false);this.showView(P)}else{this.alfLog("error","A view was requested that does not define a 'renderView' function",this.viewMap[O.value])}}}}}},clearViews:function e(){for(var P in this.viewMap){var O=this.viewMap[P];if(typeof O.clearOldView==="function"){O.clearOldView()}}},hideChildren:function D(O){k.forEach(O.children,function(P){x.add(P,"share-hidden")})},showNoDataMessage:function u(){this.hideChildren(this.domNode);x.remove(this.noDataNode,"share-hidden")},showDataLoadFailure:function E(){this.hideChildren(this.domNode);x.remove(this.dataFailureNode,"share-hidden")},showLoadingMessage:function J(){if(!this.useInfiniteScroll){this.hideChildren(this.domNode);x.remove(this.dataLoadingNode,"share-hidden")}else{x.remove(this.dataLoadingMoreNode,"share-hidden")}},showRenderingMessage:function B(){if(!this.useInfiniteScroll){this.hideChildren(this.domNode);x.remove(this.renderingViewNode,"share-hidden")}},showView:function K(O){this.hideChildren(this.domNode);if(this.viewsNode.children.length>0){this.viewsNode.removeChild(this.viewsNode.children[0])}I.place(O.domNode,this.viewsNode);x.remove(this.viewsNode,"share-hidden");O.onViewShown()},loadData:function o(){if(!this.requestInProgress){this.showLoadingMessage();if(!this.useInfiniteScroll){this.clearViews()}var O;if(this.loadDataPublishPayload){O=i.clone(this.loadDataPublishPayload)}else{O={}}O.alfResponseTopic=this.pubSubScope+this.loadDataPublishTopic;this.updateLoadDataPayload(O);this.alfPublish(this.loadDataPublishTopic,O,true)}else{this.alfLog("warn","Waiting for previous data load request to complete",this)}},updateLoadDataPayload:function p(O){},itemsProperty:"items",metadataProperty:"metadata",onDataLoadSuccess:function F(Q){this.alfLog("log","Data Loaded",Q,this);var R=false;if(this.itemsProperty==null){this.currentData={};this.currentData.items=Q.response;R=true}else{var O=i.getObject(this.itemsProperty,false,Q.response);if(O==null){O=i.getObject(this.itemsProperty,false,Q)}if(O){this.currentData={};this.currentData.items=O;R=true;var P=i.getObject(this.metadataProperty,false,Q.response);if(P){this.currentData.metadata=P}}else{this.showDataLoadFailure()}}if(R){if(Q.response){this.processLoadedData(Q.response)}else{this.processLoadedData(this.currentData)}this.renderView()}this.alfPublish(this.requestFinishedTopic,{})},renderView:function l(){var O=this.viewMap[this._currentlySelectedView];if(O!=null){this.showRenderingMessage();O.setData(this.currentData);O.renderView(this.useInfiniteScroll);this.showView(O);this.alfPublish("ALF_RESIZE_SIDEBAR",{})}},processLoadedData:function L(O){this.alfPublish(this.documentsLoadedTopic,{documents:this.currentData.items,totalDocuments:(O&&O.totalRecords)?O.totalRecords:this.currentData.items.length,startIndex:(O&&O.startIndex)?O.startIndex:0})},onDataLoadFailure:function F(P,O){this.alfLog("error","Data Load Failed",P,O);this.currentData=null;this.showDataLoadFailure();this.alfPublish(this.requestFinishedTopic,{})},onScrollNearBottom:function A(O){},onRequestInProgress:function s(){this.requestInProgress=true},onRequestFinished:function h(){this.requestInProgress=false}})});