define(["dojo/_base/declare","alfresco/core/Core","alfresco/core/CoreXhr","service/constants/Default","alfresco/dialogs/AlfDialog","dojo/_base/lang","dojo/_base/array","dojo/json"],function(r,o,f,m,e,t,h,q){return r([o,f],{i18nRequirements:[{i18nFile:"./i18n/CrudService.properties"}],constructor:function b(u){t.mixin(this,u);this.alfSubscribe("ALF_CRUD_GET_ALL",t.hitch(this,this.onGetAll));this.alfSubscribe("ALF_CRUD_GET_ONE",t.hitch(this,this.onGetOne));this.alfSubscribe("ALF_CRUD_CREATE",t.hitch(this,this.onCreate));this.alfSubscribe("ALF_CRUD_UPDATE",t.hitch(this,this.onUpdate));this.alfSubscribe("ALF_CRUD_DELETE",t.hitch(this,this.onDelete))},refreshRequest:function k(w,v){var x=t.getObject("alfTopic",false,v);if(x!=null){this.alfPublish(x+"_SUCCESS",w)}else{this.alfLog("warn","It was not possible to publish requested CRUD data because the 'responseTopic' attribute was not set on the original request",w,v)}var z=t.getObject("successMessage",false,v);if(z==null){z=this.message("crudservice.generic.success.message")}this.alfPublish("ALF_DISPLAY_NOTIFICATION",{message:z});var y=t.getObject("data.noRefresh",false,v);if(y!=null&&y===true){}else{var u=t.getObject("data.pubSubScope",false,v);if(u==null){u=""}this.alfPublish(u+"ALF_DOCLIST_RELOAD_DATA")}},getUrlFromPayload:function d(v){var u=t.getObject("url",false,v);if(u===null){this.alfLog("warn","A request was made to service a CRUD request but no 'url' attribute was provided on the payload",v,this)}else{var w=v.urlType;if(w==null||w==="PROXY"){u=m.PROXY_URI+u}else{if(w==="SHARE"){u=m.URL_SERVICECONTEXT+u}else{this.alfLog("warn","An unknown URL type was requested, using provided URL",v,this)}}}return u},clonePayload:function s(v){var u=t.clone(v);delete u.url;delete u.alfResponseTopic;delete u.alfTopic;return u},onGetAll:function n(v){var u=this.getUrlFromPayload(v);if(u!==null){this.serviceXhr({url:u,data:this.clonePayload(v),alfTopic:(v.alfResponseTopic?v.alfResponseTopic:null),method:"GET"})}},onGetOne:function a(v){var u=this.getUrlFromPayload(v);if(u!==null){this.serviceXhr({url:u,data:this.clonePayload(v),method:"GET"})}},onCreate:function g(v){var u=this.getUrlFromPayload(v);this.serviceXhr({url:u,data:this.clonePayload(v),method:"POST",successMessage:v.successMessage,alfTopic:v.alfResponseTopic,successCallback:this.refreshRequest,callbackScope:this})},onUpdate:function c(v){var u=this.getUrlFromPayload(v);this.serviceXhr({url:u,data:this.clonePayload(v),method:"PUT",successMessage:v.successMessage,alfTopic:v.alfResponseTopic,successCallback:this.refreshRequest,callbackScope:this})},onDelete:function p(v){var u=this.getUrlFromPayload(v);if(u!==null){if(v.requiresConfirmation===true){this.requestDeleteConfirmation(u,v)}else{this.performDelete(u,v)}}},requestDeleteConfirmation:function j(y,A){var x=this.generateUuid();this._deleteHandle=this.alfSubscribe(x,t.hitch(this,this.onDeleteConfirmation),true);var B=(A.confirmationTitle)?A.confirmationTitle:this.message("crudservice.generic.delete.title");var v=(A.confirmationPrompt)?A.confirmationPrompt:this.message("crudservice.generic.delete.prompt");var u=(A.confirmationButtonLabel)?A.confirmationButtonLabel:this.message("crudservice.generic.delete.confirmationButtonLabel");var w=(A.cancellationButtonLabel)?A.cancellationButtonLabel:this.message("crudservice.generic.delete.cancellationButtonLabel");var z=new e({generatePubSubScope:false,title:B,textContent:v,widgetsButtons:[{name:"alfresco/buttons/AlfButton",config:{label:u,publishTopic:x,publishPayload:{url:y,pubSubScope:A.pubSubScope,responseTopic:A.responseTopic,successMessage:A.successMessage}}},{name:"alfresco/buttons/AlfButton",config:{label:w,publishTopic:"close"}}]});z.show()},performDelete:function l(u,v){this.serviceXhr({url:u,method:"DELETE",data:this.clonePayload(v),alfTopic:v.responseTopic,successMessage:v.successMessage,successCallback:this.refreshRequest,callbackScope:this})},onDeleteConfirmation:function i(u){this.alfUnsubscribeSaveHandles([this._deleteHandle]);this.performDelete(u.url,u)}})});