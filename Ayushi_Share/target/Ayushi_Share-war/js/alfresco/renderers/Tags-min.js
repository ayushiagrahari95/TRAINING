define(["dojo/_base/declare","alfresco/renderers/InlineEditProperty","alfresco/core/ObjectTypeUtils","dojo/_base/array","dojo/_base/lang","alfresco/forms/controls/ComboBox","alfresco/renderers/ReadOnlyTag","alfresco/renderers/EditTag","dojo/dom-construct","dojo/dom-class","dijit/registry","dojo/on","dojo/keys","dojo/_base/event"],function(z,g,q,h,D,A,x,b,d,j,i,k,n,w){return z([g],{cssRequirements:[{cssFile:"./css/Tags.css"}],getRenderedProperty:function p(F){var E=null;h.forEach(this.currentTags,D.hitch(this,this.destroyTag));this.currentTags=[];if(!q.isArray(F)){this.alfLog("warn","Expected an array value for tags",this,F)}else{h.forEach(F,D.hitch(this,this.createReadOnlyTag,"name","nodeRef"));E=""}return E},destroyTag:function c(E){if(typeof E.destroy==="function"){E.destroy()}},createReadOnlyTag:function l(H,E,I,F){if(I==null||I[H]==null){this.alfLog("warn","No '"+H+"' attribute for tag",this,I)}else{var G=new x({tagName:I[H],tagValue:I[E]});this.currentTags.push(G)}},postCreate:function o(){this.inherited(arguments);if(this.currentTags&&this.currentTags.length>0){d.empty(this.renderedValueNode);h.forEach(this.currentTags,D.hitch(this,this.placeReadOnlyTag))}this.initialTags=D.clone(this.currentTags)},placeReadOnlyTag:function t(F,E){F.placeAt(this.renderedValueNode)},getPrimaryFormWidget:function a(){return{id:this.id+"_EDIT_TAGS",name:"alfresco/forms/controls/ComboBox",config:{label:"",name:this.postParam,additionalCssClasses:"hiddenlabel",optionsConfig:{queryAttribute:"name",publishTopic:"ALF_RETRIEVE_CURRENT_TAGS",publishPayload:{resultsProperty:"response.data.items"}}}}},onEditClick:function y(){this.inherited(arguments);if(this.editTagsNode!=null){var E=i.findWidgets(this.editTagsNode);h.forEach(E,D.hitch(this,this.destroyTag));d.destroy(this.editTagsNode)}this.editTagsNode=d.create("span",{},this.editNode,"first");k(this.editTagsNode,"ALF_REMOVE_TAG",D.hitch(this,this.onRemoveEditTag));h.forEach(this.currentTags,D.hitch(this,this.createEditTag,"tagName","tagValue"))},createEditTag:function m(H,E,I,F){var G=new b({tagName:I[H],tagValue:I[E]});G.placeAt(this.editTagsNode);this.currentTags.push(G)},onRemoveEditTag:function f(E){var G=i.byNode(E.target);if(G!=null){var F=G.tagName;this.currentTags=h.filter(this.currentTags,function(I,H){return I.tagName!==F});G.destroy()}},onValueEntryKeyPress:function s(G){if(G.charOrCode==n.ESCAPE){w.stop(G);this.onCancel()}else{if(G.charOrCode==n.ENTER){w.stop(G);var F=this.getFormWidget().getValue();var E=D.getObject(this.postParam,false,F);if(E!==""){var H={};D.setObject(this.postParam,"",H);this.getFormWidget().setValue(H);this.createTag(E,false)}else{this.onSave()}}}},createTag:function r(F,I){var G=h.some(this.currentTags,function(K,J){return K.tagName===F});if(G===true){this.alfLog("log","Tag already used, no need to add again",this,F)}else{var E=this.generateUuid();var H={tagName:F,alfResponseTopic:E};this._createTagHandle=this.alfSubscribe(E+"_SUCCESS",D.hitch(this,this.onTagCreated),true);this.alfPublish("ALF_CREATE_TAG",H,true)}},onTagCreated:function e(E){this.alfUnsubscribeSaveHandles([this._createTagHandle]);this.createEditTag("name","nodeRef",E.response);if(E.originalRequestConfig.saveTagsAfterCreate===true){this.onSave()}},onSave:function v(){var F=this.getFormWidget().getValue();var E=D.getObject(this.postParam,false,F);if(E!==""){var G={};D.setObject(this.postParam,"",G);this.getFormWidget().setValue(G);this.createTag(E,true)}else{this.inherited(arguments)}},updateSaveData:function u(H){var E=i.findWidgets(this.editTagsNode);var F="";for(var G=0;G<E.length;G++){F=F+","+E[G].tagValue}if(F.length>0){F=F.substring(1)}H[this.postParam]=F},onSaveSuccess:function C(G){this.alfUnsubscribeSaveHandles([this._saveSuccessHandle,this._saveFailureHandle]);this.alfLog("log","Property '"+this.propertyToRender+"' successfully updated for node: ",this.currentItem);var F=i.findWidgets(this.renderedValueNode);h.forEach(F,D.hitch(this,this.destroyTag));d.empty(this.renderedValueNode);this.currentTags=[];var E=i.findWidgets(this.editTagsNode);h.forEach(E,D.hitch(this,this.createReadOnlyTag,"tagName","tagValue"));h.forEach(this.currentTags,D.hitch(this,this.placeReadOnlyTag));this.initialTags=D.clone(this.currentTags);j.remove(this.renderedValueNode,"hidden faded");j.add(this.editNode,"hidden");this.renderedValueNode.focus()},onCancel:function B(){this.inherited(arguments);this.currentTags=D.clone(this.initialTags)}})});