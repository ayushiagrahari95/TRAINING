define(["dojo/_base/declare","dijit/_WidgetBase","alfresco/core/Core","alfresco/core/CoreXhr","dojo/json","dojo/_base/lang","dojo/_base/array","dojo/on","alfresco/dialogs/AlfDialog","alfresco/buttons/AlfButton","service/constants/Default"],function(y,d,n,h,x,E,i,j,g,o,k){return y([d,n,h],{i18nRequirements:[{i18nFile:"./i18n/AlfUpload.properties"}],_ALF_UPLOAD_TOPIC:"ALF_UPLOAD_REQUEST",STATE_BROWSING:1,STATE_ADDED:2,STATE_UPLOADING:3,STATE_FINISHED:4,STATE_FAILURE:5,STATE_SUCCESS:6,fileStore:null,aggregateUploadTargetSize:0,aggregateUploadCurrentSize:0,reset:function v(){this.fileStore={};this.aggregateUploadTargetSize=0;this.aggregateUploadCurrentSize=0},constructor:function q(F){E.mixin(this,F);this.reset();this.alfSubscribe(this._ALF_UPLOAD_TOPIC,E.hitch(this,"onUploadRequest"))},onUploadRequest:function r(G){this.alfLog("log","Upload request received: ",G);if(E.exists("filesRefs",G)){var F=this.alfGetData(G.filesRefs);if(F!=null){G.files=F}}if(E.exists("files",G)&&E.exists("targetData",G)){this.currentResponseTopic=G.alfResponseTopic;this.filesToUpload=[];this.validateRequestedFiles(G.files);this.startFileUploads(G.targetData)}else{this.alfLog("warn","A request was received to upload files but either no 'files' attribute or no 'targetData' attribute was defined",G,this)}},validateRequestedFiles:function D(F){i.forEach(F,E.hitch(this,"validateRequestedFile"))},validateRequestedFile:function t(G,F){if(G.size===0){this.addInvalidFile(G)}else{this.addFileForUpload(G)}},addInvalidFile:function c(F){this.alfLog("log","Adding invalid file: ",F,this);if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.addFailedFile==="function"){this.uploadDisplayWidget.addFailedFile(F.name,{reason:"0kb files cannot be uploaded"})}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'addFailedFile' function",this)}},addFileForUpload:function b(F){this.alfLog("log","Adding file for upload",F,this);if(this.filesToUpload==null){this.filesToUpload=[]}this.filesToUpload.push(F)},startFileUploads:function s(G){var F=0;i.forEach(this.filesToUpload,function(I,H){F+=I.size},this);this.aggregateUploadTargetSize=F;i.forEach(this.filesToUpload,function(J,I){var H="file"+I;var N=J.name;var K=new XMLHttpRequest();K.upload._fileData=H;j(K.upload,"progress",E.hitch(this,"uploadProgressListener",H));j(K.upload,"load",E.hitch(this,"successListener",H));j(K.upload,"error",E.hitch(this,"failureListener",H));var L=null;var M=this.constructUploadData(J,N,G);this.fileStore[H]={state:this.STATE_ADDED,fileName:N,nodeRef:L,uploadData:M,request:K,lastProgress:0};if(this.uploadDisplayWidget==null){this.alfLog("warn","No widget has been defined to handle the file upload display - 'uploadDisplayWidget' is null",this)}else{if(typeof this.uploadDisplayWidget.addInProgressFile!=="function"){this.alfLog("warn","The 'uploadDisplayWidget' does not have an 'addInProgressFile' function",this.uploadDisplayWidget)}else{this.uploadDisplayWidget.addInProgressFile(H,J)}}},this);this.spawnFileUploads();this.progressDialog.show()},constructUploadData:function a(F,I,H){var G={filedata:F,filename:I,destination:H.destination,siteId:H.siteId,containerId:H.containerId,uploaddirectory:H.uploadDirectory,majorVersion:(H.majorVersion!=null?H.majorVersion:"true"),updateNodeRef:H.updateNodeRef,description:H.description,overwrite:H.overwrite,thumbnails:H.thumbnails,username:H.username};return G},spawnFileUploads:function f(){for(var G in this.fileStore){var F=this.fileStore[G];if(F.state==this.STATE_ADDED){this.startFileUpload(F);return}}},startFileUpload:function b(G){G.state=this.STATE_UPLOADING;var F;if(this.uploadURL==null){F=k.PROXY_URI+"api/upload"}else{F=k.PROXY_URI+this.uploadURL}if(this.isCsrfFilterEnabled()){F+="?"+this.getCsrfParameter()+"="+encodeURIComponent(this.getCsrfToken())}if(this.uploadMethod===this.FORMDATA_UPLOAD){var H=new FormData();H.append("filedata",G.uploadData.filedata);H.append("filename",G.uploadData.filename);H.append("destination",G.uploadData.destination);H.append("siteId",G.uploadData.siteId);H.append("containerId",G.uploadData.containerId);H.append("uploaddirectory",G.uploadData.uploaddirectory);H.append("majorVersion",G.uploadData.majorVersion!=null?G.uploadData.majorVersion:"false");H.append("username",G.uploadData.username);H.append("overwrite",G.uploadData.overwrite);H.append("thumbnails",G.uploadData.thumbnails);if(G.uploadData.updateNodeRef){H.append("updateNodeRef",G.uploadData.updateNodeRef)}if(G.uploadData.description){H.append("description",G.uploadData.description)}G.request.open("POST",F,true);G.request.send(H)}},uploadProgressListener:function p(H,G){this.alfLog("log","File upload progress update received",G);if(G.lengthComputable){try{var F=Math.round((G.loaded*100)/G.total),J=this.fileStore[H];this.alfLog("log","File: "+H+", uploaded: "+F+"%");if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.updateUploadProgress==="function"){this.uploadDisplayWidget.updateUploadProgress(H,F,G)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'updateUploadProgress' function",this)}if(J.lastProgress==null){J.lastProgress=0;J.currentProgress=G.loaded}J.currentProgress=G.loaded;if(J.state===this.STATE_UPLOADING){this.updateAggregateProgress(J);J.lastProgress=G.loaded}}catch(I){this.alfLog("error","The following error occurred processing an upload progress event: ",I,G)}}else{this.alfLog("log","File upload progress not computable",G,this)}},updateAggregateProgress:function m(G){if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.updateAggregateProgress==="function"){this.aggregateUploadCurrentSize-=G.lastProgress;if(G.state!==this.STATE_UPLOADING){this.aggregateUploadCurrentSize+=G.uploadData.filedata.size}else{this.aggregateUploadCurrentSize+=G.currentProgress}var F=(this.aggregateUploadCurrentSize/this.aggregateUploadTargetSize);this.uploadDisplayWidget.updateAggregateProgress(F)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'updateAggregateProgress' function",this)}},successListener:function A(G,F){try{this.alfLog("log","File upload completion notification received",F);var I=this.fileStore[G];if(I.request.readyState!=4){var K=this;I.request.onreadystatechange=function J(){if(I.request.readyState==4){K.processUploadCompletion(G,F)}}}else{this.processUploadCompletion(G,F)}}catch(H){this.alfLog("error","The following error occurred processing an upload completion event: ",H,F)}},processUploadCompletion:function z(G,F){var I=this.fileStore[G];if(I.request.status=="200"){var H=x.parse(I.request.responseText);I.nodeRef=H.nodeRef;I.fileName=H.fileName;I.state=this.STATE_SUCCESS;if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.handleCompletedUpload==="function"){this.uploadDisplayWidget.handleCompletedUpload(G,F,I.request)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'handleCompletedUpload' function",this)}this.updateAggregateProgress(I);this.spawnFileUploads()}else{this.processUploadFailure(G,F,I.request)}},failureListener:function C(G,F){try{var I=this.fileStore[G];if(I.state!==this.STATE_FAILURE){this.processUploadFailure(G,F)}}catch(H){this.alfLog("error","The following error occurred processing an upload failure event: ",H,F)}},processUploadFailure:function w(G,F){var H=this.fileStore[G];H.state=this.STATE_FAILURE;if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.handleFailedUpload==="function"){this.uploadDisplayWidget.handleFailedUpload(G,F,H.request)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'handleFailedUpload' function",this)}this.updateAggregateProgress(H);this.spawnFileUploads()},progressDialog:null,progressDialogTitleKey:"progress-dialog.title",createProgressDialogTitle:function l(){return this.message(this.progressDialogTitleKey)},widgetsForProgressDialog:[{name:"alfresco/upload/AlfUploadDisplay",assignTo:"uploadDisplayWidget",config:{}}],postCreate:function e(){if(this.progressDialog==null){var F="ALF_UPLOAD_DIALOG_OK_CLICK",G="ALF_UPLOAD_DIALOG_CANCEL_CLICK";this.alfSubscribe(F,E.hitch(this,"onProgressDialogOkClick"));this.alfSubscribe(G,E.hitch(this,"onProgressDialogCancelClick"));this.progressDialog=new g({title:this.createProgressDialogTitle(),widgetsContent:this.widgetsForProgressDialog,widgetsButtons:[{name:"alfresco/buttons/AlfButton",config:{label:this.message("progress-dialog.ok-button.label"),publishTopic:F}},{name:"alfresco/buttons/AlfButton",config:{label:this.message("progress-dialog.cancel-button.label"),publishTopic:G}}]});this.getUploadDisplayWidget()}},getUploadDisplayWidget:function r(){if(this.progressDialog!=null&&this.progressDialog.uploadDisplayWidget!=null){this.uploadDisplayWidget=this.progressDialog.uploadDisplayWidget}},onProgressDialogOkClick:function B(F){this.alfLog("log","Upload progress dialog 'ok' button clicked");this.reset();if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.reset==="function"){this.uploadDisplayWidget.reset()}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'reset' function",this)}if(this.currentResponseTopic!=null){this.alfPublish(this.currentResponseTopic,{},true)}},onProgressDialogCancelClick:function u(F){this.alfLog("log","Upload progress dialog 'cancel' button clicked");this.reset();if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.reset==="function"){this.uploadDisplayWidget.reset()}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'reset' function",this)}if(this.currentResponseTopic!=null){this.alfPublish(this.currentResponseTopic,{},true)}}})});