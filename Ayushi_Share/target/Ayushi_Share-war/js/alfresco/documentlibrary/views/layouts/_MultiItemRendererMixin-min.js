define(["dojo/_base/declare","alfresco/core/CoreWidgetProcessing","alfresco/core/ObjectProcessingMixin","alfresco/core/ObjectTypeUtils","alfresco/core/JsNode","alfresco/documentlibrary/_AlfDocumentListTopicMixin","dojo/dom-class","dojo/_base/array","dojo/_base/lang","dojo/dom-style","dojo/on","dojo/_base/event"],function(x,o,w,p,u,b,j,f,z,r,k,t){return x([o,w,b],{cssRequirements:[{cssFile:"./css/_MultiItemRendererMixin.css"}],currentData:null,currentIndex:null,currentItem:null,setData:function i(A){this.currentData=A},augmentData:function y(A){if(!this.currentData){this.alfLog("debug","AlfDocumentListView_augmentData called but this.currentData empty, so using setData instead.");this.setData(A)}else{if(this.currentData.totalRecords&&A.totalRecords&&A.startIndex){this.currentData.totalRecords=A.startIndex+A.totalRecords}this.currentData.numberFound=A.numberFound;if(z.isArray(this.currentData.items)&&z.isArray(A.items)){this.currentData.previousItemCount=this.currentData.items.length;this.currentData.items=this.currentData.items.concat(A.items)}}},clearData:function l(){this.alfLog("info","Clearing currentData.");this.currentData=null},getData:function q(){return this.currentData},renderData:function e(){if(this.rootWidgetSubscriptions==null){this.rootWidgetSubscriptions=[]}f.forEach(this.rootWidgetSubscriptions,function(C,B){if(typeof C.remove==="function"){C.remove()}});if(this.currentData&&this.currentData.items){this.alfLog("log","Rendering data",this.currentData.items);this.currentIndex=this.currentData.previousItemCount||0;this.currentItem=this.currentData.items[this.currentIndex];if(this.currentItem&&this.currentItem.index==null){this.currentItem.index=this.currentIndex}var A=(this.currentIndex)?this.currentData.items.slice(this.currentIndex):this.currentData.items;f.forEach(A,z.hitch(this,this.renderNextItem));this.allItemsRendered()}else{this.alfLog("warn","No data to render!")}},rootViewWidget:null,renderNextItem:function m(){this.alfLog("log","Rendering item",this.currentData.items[this.currentIndex]);this.currentData.items[this.currentIndex].isLastItem=(this.currentItem.index===this.currentData.items.length-1);if(this.width!=null){r.set(this.domNode,"width",this.width)}if(this.containerNode!=null){var A=JSON.parse(JSON.stringify(this.widgets));this.processWidgets(A,this.containerNode)}else{this.alfLog("warn","There is no 'containerNode' for adding an item to")}},_renderedItemWidgets:null,allWidgetsProcessed:function d(A){if(this._renderedItemWidgets==null){this._renderedItemWidgets=[]}this._renderedItemWidgets.push(A);this.currentIndex++;if(this.currentData&&this.currentData.items&&this.currentData.items.length!=null){f.forEach(A,z.hitch(this,"rootWidgetProcessing"));if(this.currentIndex<this.currentData.items.length){this.currentItem=this.currentData.items[this.currentIndex];if(this.currentItem.index==null){this.currentItem.index=this.currentIndex}}}else{}},allItemsRendered:function h(){},rootWidgetSubscriptions:null,rootWidgetProcessing:function s(B,A){j.add(B.domNode,"alfresco-documentlibrary-views-layout-_MultiItemRendererMixin--item");if(this.rootWidgetSubscriptions==null){this.rootWidgetSubscriptions=[]}if(this.supportsItemSelection===true){this.rootWidgetSubscriptions.push(this.alfSubscribe(this.documentSelectedTopic,z.hitch(this,"onItemSelection",B)));this.rootWidgetSubscriptions.push(this.alfSubscribe(this.documentDeselectedTopic,z.hitch(this,"onItemDeselection",B)))}},onItemSelection:function v(A,B){if(this.compareItems(A.currentItem,B.value)){j.add(A.domNode,"selected")}},onItemDeselection:function c(A,B){if(this.compareItems(A.currentItem,B.value)){j.remove(A.domNode,"selected")}},itemKey:"nodeRef",compareItems:function a(B,A){var D=z.getObject(this.itemKey,null,B);var C=z.getObject(this.itemKey,null,A);return(D!=null&&(D==C))},createWidget:function g(A,B,D,C){if(A==null||A.config==null){A.config={}}if(this.currentItem!=null){if(typeof this.currentItem.jsNode==="undefined"&&this.currentItem.node!=null){this.currentItem.jsNode=new u(this.currentItem.node)}A.config.currentItem=this.currentItem;if(this.currentData&&this.currentData.metadata){A.config.currentMetadata=this.currentData.metadata}this.inherited(arguments)}},onFocusClick:function n(A){k.emit(this.domNode,"onItemFocused",{bubbles:true,cancelable:true,item:this});t.stop(A)}})});